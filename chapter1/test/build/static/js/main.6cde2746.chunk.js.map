{"version":3,"sources":["PlaybackOptions.js","TitleBar.js","BlogComponent.js","AllDevAvatars.js","BlogView.js","ImageGallery.js","VideoGallery.js","AudioGallery.js","DevGroupAvatar.js","CommentView.js","CommentGroup.js","CommentNavigator.js","FileSystem.js","Search.js","PlaybackNavigator.js","PlaybackScrollBar.js","PlaybackControls.js","EditorFileTabs.js","EditorView.js","CodeView.js","playbackEngine/EditorState.js","playbackEngine/NewCodeFileMarker.js","playbackEngine/NewCodeMarkerGenerator.js","playbackEngine/PlaybackEngine.js","App.js","reportWebVitals.js","index.js"],"names":["PlaybackOptions","props","id","type","className","data-bs-toggle","data-bs-target","title","width","height","viewBox","fill","xmlns","fillRule","d","tabIndex","role","aria-modal","aria-hidden","data-bs-dismiss","aria-label","TitleBar","codeModeButtonClass","blogModeButtonClass","isInBlogMode","playbackTitle","onClick","enterCodeMode","enterBlogMode","increaseFontSize","decreaseFontSize","increasePlaybackSpeed","decreasePlaybackSpeed","BlogComponent","aceCodeBlock","audioArray","videoArray","imageArray","comment","selectedCodeBlocks","allMarkers","minRowHighlight","Number","MAX_SAFE_INTEGER","maxRowHighlight","MIN_SAFE_INTEGER","selectedComment","forEach","commentBlock","startRow","endRow","push","startCol","startColumn","endCol","endColumn","linesAboveHighlight","parseInt","linesAbove","numLines","linesBelow","readOnly","fontSize","theme","setOptions","firstLineNumber","maxLines","markers","value","viewableBlogText","highlightActiveLine","highlightGutterLine","showPrintMargin","videoURLs","length","url","controls","src","audioURLs","imageURLs","alt","isDescriptionComment","dangerouslySetInnerHTML","__html","commentText","currentFilePath","AllDevAvatars","devDuplicateCatcher","Set","devGroupId","allDeveloperGroups","devGroup","memberIds","devId","add","devImages","Array","from","map","memberId","dev","allDevelopers","imgSize","sizeInPixels","imgURL","avatarURL","userName","email","href","BlogView","eventsWithCommentsList","eventId","comments","blogComponents","i","commentGroup","j","blogComment","developerGroups","developers","ImageGallery","addToIndex","state","index","setState","subtractFromIndex","activeImage","this","data-bs-interval","data-bs-ride","React","Component","VideoGallery","videoRef","useRef","video","videoURL","ref","onPlay","current","playbackRate","mediaPlaybackSpeed","style","maxHeight","setMediaPlaybackSpeed","AudioGallery","audioRef","audio","audioURL","DevGroupAvatar","developerGroupId","CommentView","e","event","commentId","preventDefault","moveToSelectedComment","isActive","descriptionComment","commentNumber","totalNumberOfComments","toggleImages","toggleVideos","toggleAudio","CommentGroup","allCommentViews","firstCommentGroup","startingCommentNumber","activeComment","CommentNavigator","newMediaSpeed","activeCommentGroupEventId","Object","keys","some","pausePointEventIds","allCommentGroups","totalNumberOfCommentsSoFar","commentGroupId","FileSystem","Search","PlaybackNavigator","toggleCommentsTab","commentsNav","fileSystem","searchComments","toggleFileSystemTab","toggleSearchCommentsTab","selectedTab","data-toggle","PlaybackScrollBar","accessibility","start","currentEventIndex","step","range","firstRelevantEventIndex","lastRelevantEventIndex","pips","mode","density","values","commentGroupPositions","format","to","clickablePips","onUpdate","newPosition","sliderUpdate","PlaybackControls","togglePlayPause","isPaused","playPauseButton","moveToNextComment","EditorFileTabs","fileTabs","fileId","file","allFiles","isDeleted","indexOfLastSlash","filePath","lastIndexOf","fileName","substring","fileTabClassName","allChangedFileIds","includes","activeFileId","changeActiveFile","handleFileTabClick","EditorView","aceRef","createRef","insertLineNumbers","deleteLineNumbers","aceEditor","editor","scrollPastEnd","renderer","$cursorLayer","element","display","session","setMode","getAceEditorMode","lineNumber","removeGutterDecoration","newCodeMarkers","allInsertLineNumbers","addGutterDecoration","allDeleteLineNumbers","modelist","window","ace","require","activeFileName","getModeForPath","commentBlocks","linesBelowHighlight","activeFileNewCodeMarkers","allNewCodeMarkers","newCodeMarker","getMarkers","activeFileContents","CodeView","seperator","playbackNavigator","editorView","allDirectories","initWidth","editorViewWidth","min","max","left","right","resizeProps","bgColor","val","unit","resizeHandlerProps","markup","position","x","y","showSwitcher","onResize","updateEditorViewWidth","EditorState","filesContents","filesEvents","allFilesText","getFile","textInFile","currentFile","row","col","latestCharacter","newCharacter","splice","restOfLineText","restOfLineEventIds","delete","character","copyElementsText","copyElementsEventIds","insert","parentDirectoryId","childFiles","indexOf","newFilePath","oldFilePath","newParentDirectoryId","oldParentDirectoryId","directoryId","directoryPath","childDirectories","newDirectoryPath","oldDirectoryPath","NewCodeFileMarker","lineChanges","insertText","nextRow","characters","insertsOnLine","deletesOnLine","expandToRowAndColumn","deleteText","retVal","markerStarted","latestMarker","NewCodeMarkerGenerator","newCodeFileMarkers","fileEvent","insertEvent","insertEventCharacter","column","deleteEvent","deleteEventCharacter","getAllNewCodeMarkers","getLinesWithInserts","getLinesWithDeletes","getAllInsertLineNumbers","getAllDeleteLineNumbers","getAllChangedFileIds","getNewCodeMarkers","getInsertLineNumbers","getDeleteLineNumbers","console","log","toDebugString","PlaybackEngine","allEvents","allComments","events","editorState","newCodeMarkerGenerator","numRelevantEvents","commentIdToEventPosition","commentGroupEventPositions","flattenedComments","commentIndexInFlattenedArray","recordCommentPositions","skipIrrelevantEvents","commentEventPositionSet","commentsPositionInEvents","displayCommentEvent","eventSequenceNumber","sort","commentPosition","permanentRelevance","stepForward","numberOfSteps","trackNewCodeChanges","stepNumber","currentEvent","handleEvent","checkForCommentAtCurrentIndex","handleEventBackward","eventNumber","eventNumberDiff","stepBackward","firstCommentInGroup","moveToPosition","stepToEventNumber","nextComment","stepToCommentById","getData","createDirectory","deleteDirectory","renameDirectory","moveDirectory","touchFile","createFile","deleteFile","renameFile","moveFile","Error","createDirectoryBackward","deleteDirectoryBackward","renameDirectoryBackward","moveDirectoryBackward","createFileBackward","deleteFileBackward","renameFileBackward","moveFileBackward","insertBackward","deleteBackward","App","playbackEngine","getActiveFileContents","getAllFiles","getAllDirectories","stepToNextComment","newIsPaused","oldState","clearInterval","autoPlayback","playTimer","setInterval","playNextEvent","playbackSpeedMs","playbackData","newWidth","editorProperties","selectedView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","loadPlaybackData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cde2746.chunk.js","sourcesContent":["import './PlayBackOptions.css';\n\nfunction PlaybackOptions(props) {\n  return (\n    <span>\n      <button id=\"playbackOptionsButton\" type=\"button\" className=\"btn\" data-bs-toggle=\"modal\" data-bs-target=\"#playbackOptionsModal\" title=\"Options Menu\">\n        {/* icon url: https://icons.getbootstrap.com/icons/gear-wide/ */}\n        <svg width=\"1.3em\" height=\"1.3em\" viewBox=\"0 0 16 16\" className=\"bi bi-gear-wide\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fillRule=\"evenodd\" d=\"M8.932.727c-.243-.97-1.62-.97-1.864 0l-.071.286a.96.96 0 0 1-1.622.434l-.205-.211c-.695-.719-1.888-.03-1.613.931l.08.284a.96.96 0 0 1-1.186 1.187l-.284-.081c-.96-.275-1.65.918-.931 1.613l.211.205a.96.96 0 0 1-.434 1.622l-.286.071c-.97.243-.97 1.62 0 1.864l.286.071a.96.96 0 0 1 .434 1.622l-.211.205c-.719.695-.03 1.888.931 1.613l.284-.08a.96.96 0 0 1 1.187 1.187l-.081.283c-.275.96.918 1.65 1.613.931l.205-.211a.96.96 0 0 1 1.622.434l.071.286c.243.97 1.62.97 1.864 0l.071-.286a.96.96 0 0 1 1.622-.434l.205.211c.695.719 1.888.03 1.613-.931l-.08-.284a.96.96 0 0 1 1.187-1.187l.283.081c.96.275 1.65-.918.931-1.613l-.211-.205a.96.96 0 0 1 .434-1.622l.286-.071c.97-.243.97-1.62 0-1.864l-.286-.071a.96.96 0 0 1-.434-1.622l.211-.205c.719-.695.03-1.888-.931-1.613l-.284.08a.96.96 0 0 1-1.187-1.186l.081-.284c.275-.96-.918-1.65-1.613-.931l-.205.211a.96.96 0 0 1-1.622-.434L8.932.727zM8 12.997a4.998 4.998 0 1 0 0-9.995 4.998 4.998 0 0 0 0 9.996z\" />\n        </svg>\n      </button>\n\n      <div id=\"playbackOptionsModal\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Playback Options</h5>\n              <button type=\"button\" id=\"optionsCloseButton\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              Options Go Here\n                        {/*\n                        <nav>\n                            <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                                <a className=\"nav-item nav-link active\" id=\"optionsTab\" data-toggle=\"tab\" href=\"#optionsTabContent\" role=\"tab\" aria-controls=\"nav-options\" aria-selected=\"true\">Options</a>\n                                <a className=\"nav-item nav-link\" id=\"controlsTab\" data-toggle=\"tab\" href=\"#controlsTabContent\" role=\"tab\" aria-controls=\"nav-controls\" aria-selected=\"false\">Controls</a>\n                            </div>\n                        </nav>\n                        <div className=\"tab-content\">\n                            <div className=\"tab-pane show active\" id=\"optionsTabContent\" role=\"tabpanel\" aria-labelledby=\"options-tab\">\n                                <div className=\"optionsGroup\">\n                                    Change code window text size\n                            <div className=\"btn-group buttonGroup\" role=\"group\">\n                                        <button id=\"textSmallerButton\" className=\"btn btn-secondary\" style={{ border: 'none' }}>Smaller</button>\n                                        <button id=\"textBiggerButton\" className=\"btn btn-secondary\" style={{ border: 'none' }}>Bigger</button>\n                                    </div>\n                                </div>\n                                <div className=\"optionsGroup\">\n                                    Change playback speed\n                            <div className=\"btn-group buttonGroup\" role=\"group\">\n                                        <button id=\"playbackSpeedDown\" className=\"btn btn-secondary\" style={{ border: 'none' }}>Slower</button>\n                                        <button id=\"playbackSpeedUp\" className=\"btn btn-secondary\" style={{ border: 'none' }}>Faster</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"tab-pane\" id=\"controlsTabContent\" role=\"tabpanel\" aria-labelledby=\"controls-tab\">\n                            </div>\n                        </div>\n                        */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </span>\n  );\n}\n\nexport default PlaybackOptions;","import './TitleBar.css';\nimport React from 'react';\nimport PlaybackOptions from './PlaybackOptions';\n\nfunction TitleBar(props) {\n  //the button style dependent on the code/blog mode prop\n  let codeModeButtonClass = \"btn\";\n  let blogModeButtonClass = \"btn\";\n  //make one of the buttons active\n  if (props.isInBlogMode) {\n    blogModeButtonClass += \" activeModeButton\";\n  } else {\n    codeModeButtonClass += \" activeModeButton\";\n  }\n\n  return (\n    <div className=\"title-bar\" id=\"title-bar\">\n      <span className=\"st-logo\">Storyteller: </span>\n      <span className=\"playback-title\">{props.playbackTitle}</span>\n\n      <div className=\"btn-group optionsButtonsGroup\" role=\"group\" aria-label=\"Options Button Group\">\n        <button id=\"enterCodeModeButton\" onClick={props.enterCodeMode} type=\"button\" className={codeModeButtonClass} title=\"Code View\">\n          {/* icon url: https://icons.getbootstrap.com/icons/code/ */}\n          <svg width=\"32\" height=\"32\" viewBox=\"0 0 16 16\" className=\"bi bi-code-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\n            <path fillRule=\"evenodd\" d=\"M6.854 4.646a.5.5 0 0 1 0 .708L4.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0zm2.292 0a.5.5 0 0 0 0 .708L11.793 8l-2.647 2.646a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708 0z\" />\n          </svg>\n        </button>\n\n        <button id=\"enterBlogModeButton\" onClick={props.enterBlogMode} type=\"button\" className={blogModeButtonClass} title=\"Blog View\">\n          {/* icon url: https://icons.getbootstrap.com/icons/file-richtext/ */}\n          <svg width=\"32\" height=\"32\" viewBox=\"0 0 16 16\" className=\"bi bi-journal-richtext\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M4 1h8a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2h1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1H2a2 2 0 0 1 2-2z\" />\n            <path d=\"M2 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H2zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H2zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H2z\" />\n            <path fillRule=\"evenodd\" d=\"M5 11.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5zm0-2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm1.639-4.208l1.33.886 1.854-1.855a.25.25 0 0 1 .289-.047L11 4.75V7a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 5 7v-.5s1.54-1.274 1.639-1.208zM6.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5z\" />\n          </svg>\n        </button>\n\n        <PlaybackOptions\n          increaseFontSize=\"todo\"\n          decreaseFontSize=\"todo\"\n          increasePlaybackSpeed=\"todo\"\n          decreasePlaybackSpeed=\"todo\" />\n      </div>\n    </div>\n  );\n}\n\nexport default TitleBar;","import './BlogComponent.css';\nimport AceEditor from 'react-ace'\nimport \"ace-builds/src-noconflict/theme-monokai\"\n\nfunction BlogComponent(props) {\n  let aceCodeBlock;\n  let audioArray = [];\n  let videoArray = [];\n  let imageArray = [];\n\n  //aceEditor\n  if (props.comment.selectedCodeBlocks[0]) {\n    let allMarkers = [];\n    let minRowHighlight = Number.MAX_SAFE_INTEGER;\n    let maxRowHighlight = Number.MIN_SAFE_INTEGER;\n\n    const selectedComment = props.comment;\n    selectedComment.selectedCodeBlocks.forEach(commentBlock => {\n      if (commentBlock.startRow < minRowHighlight) {\n        minRowHighlight = commentBlock.startRow;\n      }\n\n      if (commentBlock.endRow > maxRowHighlight) {\n        maxRowHighlight = commentBlock.endRow;\n      }\n\n      allMarkers.push({\n        startRow: commentBlock.startRow,\n        startCol: commentBlock.startColumn,\n        endRow: commentBlock.endRow,\n        endCol: commentBlock.endColumn,\n        type: \"text\",\n        className: \"selectedCodeHighlight\"\n      });\n    });\n    const linesAboveHighlight = minRowHighlight - Number.parseInt(selectedComment.linesAbove);\n    const linesBelowHighlight = maxRowHighlight + Number.parseInt(selectedComment.linesBelow);\n    \n    let numLines = linesBelowHighlight - linesAboveHighlight + 1;\n    aceCodeBlock = (\n      <AceEditor\n        readOnly={true}\n        fontSize={props.fontSize}\n        width=\"100%\"\n        theme=\"monokai\"\n        setOptions={{firstLineNumber: linesAboveHighlight + 1}}\n        maxLines={numLines}\n        markers={allMarkers}\n        value={props.comment.viewableBlogText}\n        highlightActiveLine={false}\n        highlightGutterLine={false}\n        showPrintMargin={false}\n      />\n\n    );\n  }\n\n  //video\n  if (props.comment.videoURLs.length > 0) {\n    props.comment.videoURLs.forEach(url => {\n      videoArray.push(\n        <video \n          key={url} \n          className=\"blogModeVideo\" \n          controls>\n          <source src={url} type=\"video/mp4\" />\n          Your browser does not support the video tag.\n        </video>\n      );\n    });\n  }\n  //audio\n  if (props.comment.audioURLs.length > 0) {\n    props.comment.audioURLs.forEach(url => {\n      audioArray.push(\n        <audio key={url} className=\"blogModeAudio\" controls>\n          <source src={url} type=\"audio/mp3\" />\n          Your browser does not support the audio tag.\n        </audio>);\n    });\n  }\n  //images\n  if (props.comment.imageURLs.length > 0) {\n    props.comment.imageURLs.forEach(url => {\n      imageArray.push(\n        <img key={url} className=\"blogModePicture\" src={url} alt=\"code\" />\n      )\n    });\n  }\n  return (\n    <div key={props.comment.id} className=\"blogStyle\">\n      <div className={props.isDescriptionComment ? \"descriptionComment\" : \"blogCommentText\"} dangerouslySetInnerHTML={{ __html: props.comment.commentText }} />\n      {videoArray}\n      {audioArray}\n      <div className=\"blogPostFileName\">{props.comment.currentFilePath}</div>\n      {aceCodeBlock}\n      {imageArray}\n    </div>\n  );\n}\n\nexport default BlogComponent;","import './AllDevAvatars.css';\n\nfunction AllDevAvatars(props) {\n  let devDuplicateCatcher = new Set();\n\n  for (let devGroupId in props.allDeveloperGroups) {\n    const devGroup = props.allDeveloperGroups[devGroupId];\n    if (devGroupId !== \"devGroupId-0\" && devGroupId !== \"devGroupId-1\") {\n      devGroup.memberIds.forEach(devId => devDuplicateCatcher.add(devId));\n    }\n  }\n  const devIdList = Array.from(devDuplicateCatcher)\n  const devImages = devIdList.map(memberId => {\n    const dev = props.allDevelopers[memberId];\n    const imgSize = props.sizeInPixels ? props.sizeInPixels : 40;\n    const imgURL = `${dev.avatarURL}?s=${imgSize}&d=ideinticon`;\n    return (\n      <div key={dev.id} className=\"devImages blogDeveloperDiv\">\n        <img\n          src={imgURL}\n          className=\"devImage rounded-circle img-thumbnail\"\n          title={dev.userName + \" \" + dev.email}\n          alt={dev.userName + \" \" + dev.email} />\n        <div className=\"blogUserName\">{dev.userName}</div>\n        <a href={\"mailto:\" + dev.email} className=\"devEmail\" title=\"Click to send email\">{dev.email}</a>\n      </div>\n    )\n  });\n  return (\n    <div>\n      {devImages}\n    </div>\n  );\n}\n\nexport default AllDevAvatars;","import './BlogView.css';\nimport BlogComponent from './BlogComponent.js'\nimport AllDevAvatars from \"./AllDevAvatars.js\"\n\nfunction BlogView(props) {\n  let eventsWithCommentsList = []\n  for (let eventId in props.comments) {\n    eventsWithCommentsList.push(eventId)\n  }\n\n  let blogComponents = [];\n  for (let i = 0; i < eventsWithCommentsList.length; i++) {\n    let commentGroup = props.comments[eventsWithCommentsList[i]];\n    for(let j = 0;j < commentGroup.length;j++) {\n      const comment = commentGroup[j];\n      const blogComment = (\n        <BlogComponent \n          key={comment.id}\n          isDescriptionComment={i === 0 && j === 0 ? true : false /* if its the first comment */}\n          fontSize={props.fontSize} \n          comment={comment} />\n        );\n      blogComponents.push(blogComment);\n    }\n  }\n  return (\n    <div className=\"blogView\" >\n      <div className=\"wrapper\">\n        <div className=\"h1 blogTitle\"> {props.title} </div>\n        <div className=\"blogDevelopersDiv\">\n          <div className=\"devImages blogDeveloperDiv\">\n            <div className=\"blogUserName\">\n              <AllDevAvatars \n                allDeveloperGroups={props.developerGroups} \n                allDevelopers={props.developers} \n              />\n            </div>\n          </div>\n          <hr className=\"devDescriptionSeparater\" />\n        </div>\n        {blogComponents}\n      </div>\n    </div>\n  );\n}\n\nexport default BlogView;\n","import React from \"react\";\n\nclass ImageGallery extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      index: 0\n    }\n  }\n\n  addToIndex = () => {\n    let tempIndex = this.state.index + 1;\n    if (tempIndex === this.props.imageURLs.length) {\n      this.setState({ index: 0 })\n    } else {\n      this.setState({ index: this.state.index + 1 })\n    }\n  }\n\n  subtractFromIndex = () => {\n    let tempIndex = this.state.index - 1;\n    if (tempIndex === -1) {\n      this.setState({ index: (this.props.imageURLs.length - 1) })\n    } else {\n      this.setState({ index: this.state.index - 1 })\n    }\n  }\n\n  render() {\n    let activeImage = this.props.imageURLs[this.state.index]\n\n    return (\n      <span>\n        <div id=\"carouselCommentControls\" className=\"carousel slide\" data-bs-interval=\"false\" data-bs-ride=\"carousel\">\n          <div className=\"carousel-inner\" data-bs-toggle=\"modal\" data-bs-target=\"#imagesModal\" title=\"Images Menu\">\n            <div className=\"carousel-item active\">\n              <img src={activeImage} className=\"d-block w-100\" alt=\"...\" />\n            </div>\n\n          </div>\n          <button className=\"carousel-control-prev\" onClick={this.subtractFromIndex} type=\"button\" data-bs-target=\"#carouselCommentControls\">\n            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span className=\"visually-hidden\">Previous</span>\n          </button>\n          <button className=\"carousel-control-next\" onClick={this.addToIndex} type=\"button\" data-bs-target=\"#carouselCommentControls\">\n            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span className=\"visually-hidden\">Next</span>\n          </button>\n        </div>\n\n        <div id=\"imagesModal\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-hidden=\"true\">\n          <div className=\"modal-dialog modal-xl\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Images</h5>\n                <button type=\"button\" id=\"optionsCloseButton\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <div id=\"carouselModalControls\" className=\"carousel slide\" data-bs-interval=\"false\" data-bs-ride=\"carousel\">\n                  <div className=\"carousel-inner\">\n                    <div className=\"carousel-item active\">\n                      <img src={activeImage} className=\"d-block w-100\" alt=\"...\" />\n                    </div>\n\n                  </div>\n                  <button className=\"carousel-control-prev\" onClick={this.subtractFromIndex} type=\"button\" data-bs-target=\"#carouselModalControls\">\n                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                    <span className=\"visually-hidden\">Previous</span>\n                  </button>\n                  <button className=\"carousel-control-next\" onClick={this.addToIndex} type=\"button\" data-bs-target=\"#carouselModalControls\">\n                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                    <span className=\"visually-hidden\">Next</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </span>\n    );\n  }\n}\n\nexport default ImageGallery;","import React, { useRef } from \"react\";\nimport './VideoGallery.css'\n\nfunction VideoGallery(props) {\n  const videoRef = useRef();\n\n  const setPlayBack = () => {\n    videoRef.current.playbackRate = props.mediaPlaybackSpeed;\n  };\n\n  function setSpeed1x() {\n    props.setMediaPlaybackSpeed(1.0);\n    videoRef.current.playbackRate = 1.0;\n  }\n\n  function setSpeed2x() {\n    props.setMediaPlaybackSpeed(2.0);\n    videoRef.current.playbackRate = 2.0;\n  }\n\n  const video = props.videoURLs.map((videoURL, index) =>\n    <video\n      ref={videoRef}\n      src={videoURL}\n      onPlay={() => setPlayBack()}\n      controls\n      style={{\n        width: \"95%\",\n        maxHeight: \"300px\"\n      }}\n      key={index}>\n    </video>\n  )\n\n  return (\n    <div className=\"video-box\">\n      <div>\n        {video}\n      </div>\n      <button className=\"btn-speed\" onClick={setSpeed1x}>1x</button>\n      <button className=\"btn-speed\" onClick={setSpeed2x}>2x</button>\n    </div>\n  );\n}\n\nexport default VideoGallery;","import './AudioGallery.css'\nimport React, { useRef } from \"react\";\n\nfunction AudioGallery(props) {\n  const audioRef = useRef();\n\n  const setPlayBack = () => {\n    audioRef.current.playbackRate = props.mediaPlaybackSpeed;\n  };\n\n  function setSpeed1x() {\n    props.setMediaPlaybackSpeed(1.0);\n    audioRef.current.playbackRate = 1.0;\n  }\n\n  function setSpeed2x() {\n    props.setMediaPlaybackSpeed(2.0);\n    audioRef.current.playbackRate = 2.0;\n  }\n\n  const audio = props.audioURLs.map((audioURL, index) =>\n    <audio\n      ref={audioRef}\n      src={audioURL}\n      onPlay={() => setPlayBack()}\n      controls \n      style={{\n        width: \"95%\",\n        maxHeight: \"300px\"\n      }}\n      key={index}>\n    </audio>\n  )\n\n  return (\n    <div className=\"audio-box\">\n      <div>\n        {audio}\n      </div>\n      <div>\n        <button className=\"btn-speed\" onClick={setSpeed1x}>1x</button>\n        <button className=\"btn-speed\" onClick={setSpeed2x}>2x</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AudioGallery;","import './DevGroupAvatar.css';\n\nfunction DevGroupAvatar(props) {\n  const developerGroup = props.allDeveloperGroups[props.developerGroupId];\n  const devImages = developerGroup.memberIds.map(memberId => {\n    const dev = props.allDevelopers[memberId];\n    const imgSize = props.sizeInPixels ? props.sizeInPixels : 40;\n    const imgURL = `${dev.avatarURL}?s=${imgSize}&d=ideinticon`;\n    return (\n      <img\n        key={dev.id}\n        src={imgURL}\n        className=\"devImage rounded-circle img-thumbnail\"\n        title={dev.userName + \" \" + dev.email}\n        alt={dev.userName + \" \" + dev.email} />\n    )\n  });\n\n  return (\n    <div>\n      {devImages}\n    </div>\n  );\n}\n\nexport default DevGroupAvatar;","import React from 'react';\nimport './CommentView.css'\nimport ImageGallery from './ImageGallery';\nimport VideoGallery from './VideoGallery';\nimport AudioGallery from './AudioGallery';\nimport DevGroupAvatar from './DevGroupAvatar';\n\nfunction CommentView(props) {\n  function commentClicked(event, commentId) {\n    event.preventDefault();\n    props.moveToSelectedComment(commentId);\n  }\n\n  function getCommentTop() {\n    if (props.descriptionComment) {\n      return (\n        <div className=\"titleBar\">\n          {props.playbackTitle}\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div className=\"commentCount text-muted float-end\">\n            {props.commentNumber}/{props.totalNumberOfComments}\n          </div>\n          <div className=\"commentAvatar rounded\">\n            <DevGroupAvatar\n              developerGroupId={props.comment.developerGroupId}\n              sizeInPixels={40}\n              allDevelopers={props.developers}\n              allDeveloperGroups={props.developerGroups} />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function toggleVideos() {\n    if (props.comment.videoURLs.length > 0) {\n      return (\n        <VideoGallery\n          videoURLs={props.comment.videoURLs}\n          setMediaPlaybackSpeed={props.setMediaPlaybackSpeed}\n          mediaPlaybackSpeed={props.mediaPlaybackSpeed} />\n      );\n    }\n  }\n\n  function toggleImages() {\n    if (props.comment.imageURLs.length > 0) {\n      return (\n        <ImageGallery imageURLs={props.comment.imageURLs} />\n      );\n    }\n  }\n\n  function toggleAudio() {\n    if (props.comment.audioURLs.length > 0) {\n      return (\n        <AudioGallery\n          audioURLs={props.comment.audioURLs}\n          setMediaPlaybackSpeed={props.setMediaPlaybackSpeed}\n          mediaPlaybackSpeed={props.mediaPlaybackSpeed}\n        />\n      );\n    }\n  }\n\n  return (\n    <div id={props.id} onClick={e => commentClicked(e, props.id)} className={props.isActive ? \"commentView activeComment\" : \"commentView\"}>\n      <div className=\"commentTopBar\">\n        {getCommentTop()}\n      </div>\n      <div className=\"commentText\" dangerouslySetInnerHTML={{ __html: props.comment.commentText }} />\n      <div>\n        {toggleImages()}\n        {toggleVideos()}\n        {toggleAudio()}\n      </div>\n    </div>\n  );\n}\n\nexport default CommentView;","import './CommentGroup.css';\nimport CommentView from './CommentView';\n\nfunction CommentGroup(props) {\n  const allCommentViews = props.comments.map((comment, index) => {\n    return (\n      <CommentView\n        key={comment.id}\n        id={comment.id}\n        descriptionComment={props.firstCommentGroup && index === 0 ? true : false}\n        playbackTitle={props.playbackTitle}\n        commentNumber={props.startingCommentNumber + index}\n        totalNumberOfComments={props.totalNumberOfComments}\n        isActive={props.activeComment && comment.id === props.activeComment.id ? true : false}\n        comment={comment}\n        developers={props.developers}\n        developerGroups={props.developerGroups}\n        setMediaPlaybackSpeed={props.setMediaPlaybackSpeed}\n        mediaPlaybackSpeed={props.mediaPlaybackSpeed} \n        moveToSelectedComment={props.moveToSelectedComment}\n        activeComment={props.activeComment}/>\n    );\n  });\n\n  return (\n    <div className={props.isActive ? \"commentGroup rounded-1 activeCommentGroup\" : \"commentGroup rounded-1\"}>\n      {allCommentViews}\n    </div>\n  );\n}\n\nexport default CommentGroup;","import './CommentNavigator.css'\nimport CommentGroup from './CommentGroup';\nimport React from 'react';\n\nclass CommentNavigator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { mediaPlaybackSpeed: 1.0 }\n  }\n\n  setMediaPlaybackSpeed = (newMediaSpeed) => {\n    this.setState({\n      mediaPlaybackSpeed: newMediaSpeed\n    });\n  }\n\n  render() {\n    let totalNumberOfComments = 0;\n    let activeCommentGroupEventId = null;\n    Object.keys(this.props.comments).forEach((eventId) => {\n      totalNumberOfComments += this.props.comments[eventId].length;\n      if(this.props.activeComment) {\n        if(this.props.comments[eventId].some(comment => this.props.activeComment.id === comment.id)) {\n          activeCommentGroupEventId = eventId;\n        }\n      }\n    });\n\n    const pausePointEventIds = Object.keys(this.props.comments);\n    let allCommentGroups = [];\n    let totalNumberOfCommentsSoFar = 0;\n    for (let i = 0; i < pausePointEventIds.length; i++) {\n      let eventId = pausePointEventIds[i];\n      allCommentGroups.push(\n        <CommentGroup\n          key={eventId}\n          commentGroupId={eventId}\n          playbackTitle={this.props.playbackTitle}\n          firstCommentGroup={i === 0 ? true : false}\n          totalNumberOfComments={totalNumberOfComments - 1 /* description comment doesn't count */}\n          startingCommentNumber={totalNumberOfCommentsSoFar}\n          isActive={activeCommentGroupEventId === eventId}\n          activeComment={activeCommentGroupEventId ? this.props.activeComment : null}\n          comments={this.props.comments[eventId]}\n          developers={this.props.developers}\n          developerGroups={this.props.developerGroups}\n          setMediaPlaybackSpeed={this.setMediaPlaybackSpeed}\n          mediaPlaybackSpeed={this.state.mediaPlaybackSpeed} \n          moveToSelectedComment={this.props.moveToSelectedComment} />\n      );\n\n      totalNumberOfCommentsSoFar += this.props.comments[eventId].length;\n    }\n\n    return (\n      <div className=\"commentNavigator\">\n        {allCommentGroups}\n      </div>\n    );\n  }\n}\n\nexport default CommentNavigator;","import './FileSystem.css'\n\nfunction FileSystem(props){\n  return(\n    <div>\n      This is FileSystem.\n    </div>\n  );\n}\n\nexport default FileSystem;","import './Search.css'\n\nfunction Search(props){\n  return(\n    <div>\n      This is Search.\n    </div>\n  );\n}\n\nexport default Search;","import React from 'react';\nimport CommentNavigator from './CommentNavigator';\nimport FileSystem from './FileSystem';\nimport Search from './Search';\nimport './PlaybackNavigator.css'\n\nclass PlaybackNavigator extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      commentsNav: true,\n      fileSystem: false,\n      searchComments: false,\n    };\n  }\n\n  toggleCommentsTab = () => {\n    this.setState({commentsNav: true, fileSystem: false, searchComments: false})\n  }\n    \n  toggleFileSystemTab = () => {\n    this.setState({commentsNav: false, fileSystem: true, searchComments: false})\n  }\n    \n  toggleSearchCommentsTab = () => {\n    this.setState({commentsNav: false, fileSystem: false, searchComments: true})\n  }\n    \n  render() {\n    let selectedTab;\n\n    if(this.state.commentsNav) {\n      selectedTab = \n        <CommentNavigator \n          playbackTitle={this.props.playbackTitle}\n          comments={this.props.comments} \n          activeComment={this.props.activeComment}\n          developers={this.props.developers}\n          developerGroups={this.props.developerGroups}\n          moveToSelectedComment={this.props.moveToSelectedComment}/>\n    } else if(this.state.fileSystem) {\n      selectedTab = <FileSystem />\n    } else {\n      selectedTab = <Search />\n    }\n\n    return (\n      <div className=\"playbackNavigator\">\n          <ul className=\"nav nav-tabs\" id=\"commentTab\">\n            <li className=\"nav-item\">\n              <button id=\"viewCommentsTab\" className= {this.state.commentsNav ? \"nav-link active\" : \"nav-link\"} onClick={this.toggleCommentsTab} role=\"tab\" data-toggle=\"tab\">Comments</button>\n            </li>\n            <li className=\"nav-item\">\n              <button id=\"fsViewTabTab\" className={this.state.fileSystem ? \"nav-link active\" : \"nav-link\"} onClick={this.toggleFileSystemTab} role=\"tab\" data-toggle=\"tab\">File&nbsp;System</button>\n            </li>\n            <li className=\"nav-item\">\n              <button id=\"searchCommentTab\" className={this.state.searchComments ? \"nav-link active\" : \"nav-link\"} onClick={this.toggleSearchCommentsTab} role=\"tab\" data-toggle=\"tab\">Search</button>\n            </li>\n          </ul>\n        {selectedTab}\n      </div>\n    );\n  }\n}\n\nexport default PlaybackNavigator;","import \"nouislider/distribute/nouislider.css\";\nimport './PlaybackScrollBar.css';\nimport Nouislider from \"nouislider-react\";\n\nfunction PlaybackScrollBar(props) {\n  function updateSlider(values) {\n    const newPosition = parseInt(values[0]);\n    //to prevent double handling when auto-playing\n    if(newPosition !== props.currentEventIndex) {\n      props.sliderUpdate(newPosition);\n    }\n  }\n  \n  return ( \n    <div className=\"playbackScrollBar\">\n      <Nouislider\n        accessibility\n        start={props.currentEventIndex}\n        step={1}\n        range={{\n          \"min\": props.firstRelevantEventIndex - 1, //give room to move into the first relevant\n          \"max\": props.lastRelevantEventIndex,\n        }}\n        pips={{ \n          mode: \"values\",\n          density: -1,\n          values: props.commentGroupPositions,\n          format: {to: ()=> \".\", from: ()=> \"\"}\n        }}\n        clickablePips\n        onUpdate={updateSlider}\n      />\n    </div> \n  );\n}\n\nexport default PlaybackScrollBar;","import './PlaybackControls.css';\nimport PlaybackScrollBar from './PlaybackScrollBar.js'\n\nfunction PlaybackControls(props) {\n  function togglePlayPause(event) {\n    event.preventDefault();\n    props.togglePlayPause(!props.isPaused);\n  }\n\n  let playPauseButton;\n  if(props.isPaused) {\n    playPauseButton = (\n      <button id=\"playPauseButton\" onClick={togglePlayPause} type=\"button\" className=\"playbackControl playbackButton\" title=\"Play\">\n        {/* icon url: https://icons.getbootstrap.com/icons/play-circle/ */}\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-play-circle\" viewBox=\"0 0 16 16\">\n          <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n          <path d=\"M6.271 5.055a.5.5 0 0 1 .52.038l3.5 2.5a.5.5 0 0 1 0 .814l-3.5 2.5A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .271-.445z\"/>\n        </svg>\n      </button>\n    );\n  } else {\n    playPauseButton = (\n      <button id=\"playPauseButton\" onClick={togglePlayPause} type=\"button\" className=\"playbackControl playbackButton\" title=\"Pause\">\n      {/* icon url: https://icons.getbootstrap.com/icons/pause-circle/ */}\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-pause-circle\" viewBox=\"0 0 16 16\">\n        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n        <path d=\"M5 6.25a1.25 1.25 0 1 1 2.5 0v3.5a1.25 1.25 0 1 1-2.5 0v-3.5zm3.5 0a1.25 1.25 0 1 1 2.5 0v3.5a1.25 1.25 0 1 1-2.5 0v-3.5z\"/>\n      </svg>\n    </button>\n    );\n  }\n\n  return ( \n    <div className=\"playbackControls\">\n      <button id=\"goToNextCommentButton\" onClick={props.moveToNextComment} type=\"button\" className=\"playbackControl playbackButton\" title=\"Go to the next comment\">\n        {/* icon url: https://icons.getbootstrap.com/icons/skip-forward-circle-fill/ */}\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-skip-forward-circle\" viewBox=\"0 0 16 16\">\n          <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n          <path d=\"M4.271 5.055a.5.5 0 0 1 .52.038L7.5 7.028V5.5a.5.5 0 0 1 .79-.407L11 7.028V5.5a.5.5 0 0 1 1 0v5a.5.5 0 0 1-1 0V8.972l-2.71 1.935a.5.5 0 0 1-.79-.407V8.972l-2.71 1.935A.5.5 0 0 1 4 10.5v-5a.5.5 0 0 1 .271-.445z\"/>\n        </svg>\n      </button>\n      <div className=\"playbackSlider\">\n        <PlaybackScrollBar \n          currentEventIndex={props.currentEventIndex}\n          activeComment={props.activeComment}\n          firstRelevantEventIndex={props.firstRelevantEventIndex}\n          lastRelevantEventIndex={props.lastRelevantEventIndex}\n          commentGroupPositions={props.commentGroupPositions}\n          sliderUpdate={props.sliderUpdate}/>\n      </div>\n      {playPauseButton}\n      <span className=\"playbackControl\">Dev Group Avatar</span>\n    </div> \n  );\n}\n\nexport default PlaybackControls;","import './EditorFileTabs.css'\n\nfunction EditorFileTabs(props){\n  function handleFileTabClick(event, fileId) {\n    event.preventDefault();\n    \n    //if a different file from the current active file has been selected\n    if(props.activeFileId !== fileId) {\n      props.changeActiveFile(fileId);\n    }\n  }\n\n  //the first 'dummy' tab when there are no files yet\n  const fileTabs = [<span key={\"no-file\"} id={\"no-file\"} className={\"fileTab\"}>&nbsp;</span>];\n  \n  //one more tab for each file\n  for(let fileId in props.allFiles) {\n    const file = props.allFiles[fileId];\n    if(file.isDeleted === false) {\n      const indexOfLastSlash = file.filePath.lastIndexOf(\"/\");\n      const fileName = file.filePath.substring(indexOfLastSlash + 1);\n\n      let fileTabClassName = \"fileTab\";\n      if(props.allChangedFileIds && props.allChangedFileIds.includes(file.fileId)) {\n        fileTabClassName += \" fileUpdated\";\n      }\n      if (props.activeFileId === file.fileId) {\n        fileTabClassName += \" activeFile\";\n      }\n      fileTabs.push(\n        <span key={file.fileId} id={file.fileId} className={fileTabClassName} onClick={(e) => handleFileTabClick(e, file.fileId)}>\n          {fileName}\n        </span>\n      );\n    }\n  }\n\n  return (\n    <div className=\"tabDiv\">\n      {fileTabs}\n    </div>\n  );\n}\n\nexport default EditorFileTabs;","import './EditorView.css';\nimport PlaybackControls from './PlaybackControls';\nimport EditorFileTabs from \"./EditorFileTabs\"\nimport React from 'react';\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nclass EditorView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.aceRef = React.createRef();\n    \n    //old line numbers need to be removed before adding new ones from a comment\n    this.insertLineNumbers = [];\n    this.deleteLineNumbers = [];\n  }\n\n  componentDidMount() {\n    const aceEditor = this.aceRef.current;\n\n    const editorOptions = {\n      scrollPastEnd: true, \n      highlightActiveLine: false, //active line highlights interfere with comment highlights\n      highlightGutterLine: false\n    };\n    //I tried to set in the component but the options didn't work when I did.\n    //it does work when adding after mount\n    aceEditor.editor.setOptions(editorOptions);\n    \n    //remove the cursor\n    aceEditor.editor.renderer.$cursorLayer.element.style.display = \"none\";\n    \n    //set the mode for the current file (or text mode if there is not one yet)\n    aceEditor.editor.session.setMode(this.getAceEditorMode());\n  }\n\n  componentDidUpdate() {\n    const aceEditor = this.aceRef.current;\n    \n    //set the mode for the current file (or text mode if there is not one yet)\n    aceEditor.editor.session.setMode(this.getAceEditorMode());\n\n    //remove the old insert/delete line numbers\n    this.insertLineNumbers.forEach(lineNumber => {\n      aceEditor.editor.session.removeGutterDecoration(lineNumber, \"insertOnLine\");\n    });\n    this.deleteLineNumbers.forEach(lineNumber => {\n      aceEditor.editor.session.removeGutterDecoration(lineNumber, \"deleteOnLine\");\n    });\n    this.insertLineNumbers = [];\n    this.deleteLineNumbers = [];\n    \n    //if there are new code markers add the line number decoration\n    if (this.props.newCodeMarkers) {\n      this.props.newCodeMarkers.allInsertLineNumbers.forEach(lineNumber => {\n        aceEditor.editor.session.addGutterDecoration(lineNumber, \"insertOnLine\");\n      });\n\n      this.props.newCodeMarkers.allDeleteLineNumbers.forEach(lineNumber => {\n        aceEditor.editor.session.addGutterDecoration(lineNumber, \"deleteOnLine\");\n      });\n      this.insertLineNumbers = this.props.newCodeMarkers.allInsertLineNumbers;\n      this.deleteLineNumbers = this.props.newCodeMarkers.allDeleteLineNumbers;\n    }\n  }\n\n  getAceEditorMode() {\n    let mode = \"text\";\n    //if there is an active file then set the editor's mode for syntax highlighting\n    if(this.props.activeFileId) {\n      //if there is an active file (moving in reverse can remove files that were present before)\n      if(this.props.allFiles[this.props.activeFileId]) {\n        //set the mode based on the active file type\n        const modelist = window.ace.require(\"ace/ext/modelist\");\n        const activeFileName = this.props.allFiles[this.props.activeFileId].filePath;\n        mode = modelist.getModeForPath(activeFileName).mode;\n      }\n    }\n    return mode;\n  }\n\n  getMarkers() {\n    const allMarkers = [];\n    //only add selected code markers when there is a comment\n    if (this.props.activeComment) {\n      //used for surrounding context highlights\n      let minRowHighlight = Number.MAX_SAFE_INTEGER;\n      let maxRowHighlight = Number.MIN_SAFE_INTEGER;\n\n      //go through each selected code block in the active comment\n      let commentBlocks = this.props.activeComment.selectedCodeBlocks;\n      commentBlocks.forEach(commentBlock => {\n        if (commentBlock.fileId === this.props.activeFileId) {\n          //record the min/max row number for the highlighted code\n          if (commentBlock.startRow < minRowHighlight) {\n            minRowHighlight = commentBlock.startRow;\n          }\n          if (commentBlock.endRow > maxRowHighlight) {\n            maxRowHighlight = commentBlock.endRow;\n          }\n          //add the selected code markers\n          allMarkers.push({\n            startRow: commentBlock.startRow,\n            startCol: commentBlock.startColumn,\n            endRow: commentBlock.endRow,\n            endCol: commentBlock.endColumn,\n            type: \"text\",\n            className: \"selectedCodeHighlight\"\n          });\n        }\n      });\n\n      //if there were any selected code blocks add the surrounding context highlight\n      if (commentBlocks.length > 0) {\n        //get the user specified line numbers above the smallest row number and below the largest row\n        const linesAboveHighlight = minRowHighlight - Number.parseInt(this.props.activeComment.linesAbove);\n        const linesBelowHighlight = maxRowHighlight + Number.parseInt(this.props.activeComment.linesBelow);\n        \n        allMarkers.push({\n          startRow: linesAboveHighlight,\n          startCol: 0,\n          endRow: linesBelowHighlight,\n          endCol: Number.MAX_SAFE_INTEGER,\n          type: \"fullLine\",\n          className: \"surroundingCodeHighlight\"\n        });\n      }\n    }\n\n    //new code markers, new code is highlighted from the last pause point\n    if (this.props.newCodeMarkers) {\n      const activeFileNewCodeMarkers = this.props.newCodeMarkers.allNewCodeMarkers;\n      if (activeFileNewCodeMarkers) {\n        //add the new code highlight markers\n        activeFileNewCodeMarkers.forEach(newCodeMarker => {\n          allMarkers.push({\n            startRow: newCodeMarker.startRow,\n            startCol: newCodeMarker.startColumn,\n            endRow: newCodeMarker.endRow,\n            endCol: newCodeMarker.endColumn,\n            type: \"text\",\n            className: \"newCodeHighlight\"\n          });\n        });\n      }\n    }\n    return allMarkers;\n  }\n\n  render() {\n    const markers = this.getMarkers();\n\n    return (\n      <div className=\"editorView\">\n        <EditorFileTabs\n          allFiles={this.props.allFiles}\n          allChangedFileIds={this.props.newCodeMarkers && this.props.newCodeMarkers.allChangedFileIds ? this.props.newCodeMarkers.allChangedFileIds : null}\n          activeFileId={this.props.activeFileId}\n          changeActiveFile={this.props.changeActiveFile}\n        />\n        <div className=\"aceEditor\">\n          <AceEditor\n            ref={this.aceRef}\n            fontSize={this.props.fontSize}\n            readOnly={true}\n            showPrintMargin={false}\n            height=\"100%\"\n            width=\"100%\"\n            theme=\"monokai\"\n            value={this.props.activeFileContents}\n            markers={markers}\n          />\n        </div>\n        <PlaybackControls\n          firstRelevantEventIndex={this.props.firstRelevantEventIndex}\n          lastRelevantEventIndex={this.props.lastRelevantEventIndex}\n          commentGroupPositions={this.props.commentGroupPositions}\n          currentEventIndex={this.props.currentEventIndex}\n          activeComment={this.props.activeComment}\n          sliderUpdate={this.props.sliderUpdate}\n          moveToNextComment={this.props.moveToNextComment}\n          isPaused={this.props.isPaused}\n          togglePlayPause={this.props.togglePlayPause} />\n      </div>\n    );\n  }\n}\nexport default EditorView;","import './CodeView.css';\nimport PlaybackNavigator from './PlaybackNavigator';\nimport { SplitView } from 'react-split-viewport'; //https://www.npmjs.com/package/react-split-viewport\nimport EditorView from './EditorView'\n\nfunction CodeView(props) {\n  //https://icons.getbootstrap.com/icons/grip-vertical/\n  const seperator =\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"gray\" className=\"bi bi-grip-vertical\" viewBox=\"0 0 16 16\">\n      <path d=\"M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\n    </svg>;\n\n  const playbackNavigator = (\n    <PlaybackNavigator\n      playbackTitle={props.playbackTitle}\n      comments={props.comments}\n      activeComment={props.activeComment}\n      developers={props.developers}\n      developerGroups={props.developerGroups}\n      moveToSelectedComment={props.moveToSelectedComment} />  \n  );\n\n  const editorView = (\n    <EditorView\n      fontSize={props.fontSize}\n      currentEventIndex={props.currentEventIndex}\n      activeFileId={props.activeFileId}\n      activeFileContents={props.activeFileContents}\n      changeActiveFile={props.changeActiveFile}\n      newCodeMarkers={props.newCodeMarkers}\n      activeComment={props.activeComment}\n      allFiles={props.allFiles}\n      allDirectories={props.allDirectories}\n      firstRelevantEventIndex={props.firstRelevantEventIndex}\n      lastRelevantEventIndex={props.lastRelevantEventIndex}\n      commentGroupPositions={props.commentGroupPositions}\n      sliderUpdate={props.sliderUpdate}\n      moveToNextComment={props.moveToNextComment}\n      isPaused={props.isPaused}\n      togglePlayPause={props.togglePlayPause} />\n  );\n\n  return (\n    <div className=\"codeView\">\n      <SplitView\n        initWidth={props.editorViewWidth}\n        range={{ min: 5, max: 95 }}\n        left={playbackNavigator}\n        right = { editorView }\n        resizeProps={{ bgColor: \"rgb(58, 58, 58)\", width: 10, height: { val: 100, unit: '%' } }}\n        resizeHandlerProps={{ markup: seperator, position: { x: 50, y: 50, unit: '%' } }}\n        showSwitcher={false}\n        onResize={props.updateEditorViewWidth}\n      />\n    </div>\n  );\n}\n\nexport default CodeView;","class EditorState {\n  constructor() {\n    this.allDirectories = {};\n    this.allFiles = {};\n    this.filesContents = {};\n    this.filesEvents = {};\n  }\n\n  getFiles() {\n    //map of all files (by file id) and a string with their contents\n    const allFilesText = {};\n    //go through each file\n    Object.keys(this.filesContents).forEach(fileId => {\n      //store the string of file contents\n      allFilesText[fileId] = this.getFile(fileId);\n    });\n    return allFilesText;\n  }\n\n  getFile(fileId) {\n    //build up the text inside\n    let textInFile = \"\";\n    //get a file\n    const currentFile = this.filesContents[fileId];\n    for (let row = 0; row < currentFile.length; row++) {\n      for (let col = 0; col < currentFile[row].length; col++) {\n        const latestCharacter = currentFile[row][col];\n        if (latestCharacter === \"NEWLINE\" || latestCharacter === \"CR-LF\") {\n          textInFile += \"\\n\";\n        } else if (latestCharacter === \"TAB\") {\n          textInFile += \"\\t\";\n        } else {\n          textInFile += latestCharacter;\n        }\n      }\n    }\n    return textInFile;\n  }\n\n  insert(fileId, newCharacter, eventId, row, col) {\n    //if this is the first insert on a new row (underneath the current last row)\n    if (row === this.filesContents[fileId].length) {\n      //create a new row at the bottom with the new event\n      this.filesContents[fileId].push([newCharacter]);\n      this.filesEvents[fileId].push([eventId]);\n    } else { //the insert is in an existing row\n      //insert somewhere in the middle\n      this.filesContents[fileId][row].splice(col, 0, newCharacter);\n      this.filesEvents[fileId][row].splice(col, 0, eventId);\n    }\n\n    //if the new character was a newline character\n    if (newCharacter === 'NEWLINE' || newCharacter === 'CR-LF') {\n      //get the rest of the line after the newline character\n      const restOfLineText = this.filesContents[fileId][row].splice(col + 1, this.filesContents[fileId][row].length - col);\n      const restOfLineEventIds = this.filesEvents[fileId][row].splice(col + 1, this.filesEvents[fileId][row].length - col);\n\n      //add a new row that the newline created with the end of the current line\n      this.filesContents[fileId].splice(row + 1, 0, restOfLineText);\n      this.filesEvents[fileId].splice(row + 1, 0, restOfLineEventIds);\n    }\n  }\n\n  insertBackward(fileId, row, col) {\n    this.delete(fileId, row, col);\n  }\n\n  delete(fileId, row, col) {\n    //if we are removing a newline character\n    if (this.filesContents[fileId][row][col].character === 'NEWLINE' || this.filesContents[fileId][row][col].character === 'CR-LF') {\n      //remove the newline character from its line\n      this.filesContents[fileId][row].splice(col, 1);\n      this.filesEvents[fileId][row].splice(col, 1);\n\n      //if there is a 'next' row, move all the elements up to this row\n      if (row + 1 < this.filesContents.length) {\n        //get the next row (it may be an empty row)\n        const copyElementsText = this.filesContents[fileId][row + 1].splice(0);\n        const copyElementsEventIds = this.filesEvents[fileId][row + 1].splice(0);\n\n        //add the elements to the current row\n        for (let i = 0; i < copyElementsText.length; i++) {\n          this.filesContents[fileId][row].push(copyElementsText[i]);\n          this.filesEvents[fileId][row].push(copyElementsEventIds[i]);\n        }\n\n        //remove the row that we copied all of the elements over\n        this.filesContents.splice(row + 1, 1);\n        this.filesEvents[fileId].splice(row + 1, 1);\n      } //else- this is the last row in the file- there is not another row after this one to copy over            \n    } else { //removing a non-newline\n      //remove the id\n      this.filesContents[fileId][row].splice(col, 1);\n      this.filesEvents[fileId][row].splice(col, 1);\n    }\n\n    //if there is nothing left on the row\n    if (this.filesContents[fileId][row].length === 0) {\n      //remove the row\n      this.filesContents[fileId].splice(row, 1);\n      this.filesEvents[fileId].splice(row, 1);\n    }\n  }\n\n  deleteBackward(fileId, newCharacter, eventId, row, col) {\n    this.insert(fileId, newCharacter, eventId, row, col);\n  }\n\n  createFile(fileId, filePath, parentDirectoryId) {\n    //info about the file\n    this.allFiles[fileId] = {\n      fileId,\n      filePath,\n      parentDirectoryId,\n      isDeleted: false\n    };\n    //store the file id in the parent dir's collection of file ids\n    this.allDirectories[parentDirectoryId].childFiles.push(fileId);\n    //empty content and event ids\n    this.filesContents[fileId] = [];\n    this.filesEvents[fileId] = [];\n  }\n\n  createFileBackward(fileId, parentDirectoryId) {\n    //remove the info about the file\n    delete this.allFiles[fileId];\n\n    //remove the file id from the parent\n    const index = this.allDirectories[parentDirectoryId].childFiles.indexOf(fileId);\n    this.allDirectories[parentDirectoryId].childFiles.splice(index, 1);\n  }\n\n  deleteFile(fileId, parentDirectoryId) {\n    //mark a file as deleted\n    this.allFiles[fileId].isDeleted = true;\n\n    //remove the file id from the parent\n    const index = this.allDirectories[parentDirectoryId].childFiles.indexOf(fileId);\n    this.allDirectories[parentDirectoryId].childFiles.splice(index, 1);\n  }\n\n  deleteFileBackward(fileId, parentDirectoryId) {\n    //mark a file as NOT deleted anymore\n    this.allFiles[fileId].isDeleted = false;\n\n    //store the file id in the parent dir's collection of file ids\n    this.allDirectories[parentDirectoryId].childFiles.push(fileId);\n  }\n\n  renameFile(fileId, newFilePath) {\n    //update path\n    this.allFiles[fileId].filePath = newFilePath;\n  }\n\n  renameFileBackward(fileId, oldFilePath) {\n    //update path\n    this.allFiles[fileId].filePath = oldFilePath;\n  }\n\n  moveFile(fileId, newFilePath, newParentDirectoryId, oldParentDirectoryId) {\n    //update parent id and path\n    this.allFiles[fileId].parentDirectoryId = newParentDirectoryId;\n    this.allFiles[fileId].filePath = newFilePath;\n    //find and remove file from old parent\n    const index = this.allFiles[oldParentDirectoryId].childFiles.indexOf(fileId);\n    this.allDirectories[oldParentDirectoryId].childFiles.splice(index, 1);\n    //add to new parent\n    this.allDirectories[newParentDirectoryId].childFiles.push(fileId);\n  }\n\n  moveFileBackward(fileId, oldFilePath, newParentDirectoryId, oldParentDirectoryId) {\n    //update parent id and path\n    this.allFiles[fileId].parentDirectoryId = oldParentDirectoryId;\n    this.allFiles[fileId].filePath = oldFilePath;\n    //find and remove file from new parent\n    const index = this.allFiles[newParentDirectoryId].childFiles.indexOf(fileId);\n    this.allDirectories[newParentDirectoryId].childFiles.splice(index, 1);\n    //add to old parent\n    this.allDirectories[oldParentDirectoryId].childFiles.push(fileId);\n  }\n\n  createDirectory(directoryId, directoryPath, parentDirectoryId) {\n    //info about the directory\n    this.allDirectories[directoryId] = {\n      directoryId,\n      directoryPath,\n      parentDirectoryId,\n      childDirectories: [],\n      childFiles: [],\n      isDeleted: false\n    };\n    //if this is not the root dir\n    if (parentDirectoryId) {\n      //store the directory id in the parent dir's collection of dir ids\n      this.allDirectories[parentDirectoryId].childDirectories.push(directoryId);\n    }\n  }\n\n  createDirectoryBackward(directoryId, parentDirectoryId) {\n    //remove the info about the directory\n    delete this.allDirectories[directoryId];\n\n    //if this is not the root dir\n    if (parentDirectoryId) {\n      //remove the dir id from the parent\n      const index = this.allDirectories[parentDirectoryId].childDirectories.indexOf(directoryId);\n      this.allDirectories[parentDirectoryId].childDirectories.splice(index, 1);\n    }\n  }\n\n  deleteDirectory(directoryId, parentDirectoryId) {\n    //mark a directory as deleted\n    this.allDirectories[directoryId].isDeleted = true;\n\n    //if this is not the root dir\n    if (parentDirectoryId) {\n      //remove the directory id from the parent\n      const index = this.allDirectories[parentDirectoryId].childDirectories.indexOf(directoryId);\n      this.allDirectories[parentDirectoryId].childDirectories.splice(index, 1);\n    }\n  }\n\n  deleteDirectoryBackward(directoryId, parentDirectoryId) {\n    //mark a directory as NOT deleted anymore\n    this.allDirectories[directoryId].isDeleted = false;\n\n    //if this is not the root dir\n    if (parentDirectoryId) {\n      //store the dir id in the parent dir's collection of dir ids\n      this.allDirectories[parentDirectoryId].childDirectories.push(directoryId);\n    }\n  }\n\n  renameDirectory(directoryId, newDirectoryPath) {\n    //update path\n    this.allDirectories[directoryId].directoryPath = newDirectoryPath;\n  }\n\n  renameDirectoryBackward(directoryId, oldDirectoryPath) {\n    //update path\n    this.allDirectories[directoryId].directoryPath = oldDirectoryPath;\n  }\n\n  moveDirectory(directoryId, newDirectoryPath, newParentDirectoryId, oldParentDirectoryId) {\n    //update parent id and path\n    this.allDirectories[directoryId].parentDirectoryId = newParentDirectoryId;\n    this.allDirectories[directoryId].directoryPath = newDirectoryPath;\n\n    //adjust the parent's children\n    if (oldParentDirectoryId) {\n      const index = this.allDirectories[oldParentDirectoryId].childDirectories.indexOf(directoryId);\n      this.allDirectories[oldParentDirectoryId].childDirectories.splice(index, 1);\n    }\n    if (newParentDirectoryId) {\n      this.allDirectories[newParentDirectoryId].childDirectories.push(directoryId);\n    }\n  }\n\n  moveDirectoryBackward(directoryId, oldDirectoryPath, newParentDirectoryId, oldParentDirectoryId) {\n    //update parent id and path\n    this.allDirectories[directoryId].parentDirectoryId = oldParentDirectoryId;\n    this.allDirectories[directoryId].directoryPath = oldDirectoryPath;\n\n    //adjust the parent's children\n    if (newParentDirectoryId) {\n      const index = this.allDirectories[newParentDirectoryId].childDirectories.indexOf(directoryId);\n      this.allDirectories[newParentDirectoryId].childDirectories.splice(index, 1);\n    }\n    if (oldParentDirectoryId) {\n      this.allDirectories[oldParentDirectoryId].childDirectories.push(directoryId);\n    }\n  }\n}\n\nexport default EditorState;","/*\n * This class is used to capture changes to new code during forward progress in\n * a playback. It uses this info to create ranges of new code to highlight. It \n * also records line numbers where inserts and deletes have happened to \n * highlight in the line number gutter.\n * \n * There are objects for every line of a file up to a change. The objects hold\n * and array of characters that hold either a '\\0' or the newly inserted character. \n * A '\\0' is a placeholder for an unknown but existing character. The ranges are \n * created by looking for lines with one or more non-'\\0' in a file. The object also \n * holds whether a line has had an insert or delete in it.\n * \n * The line changes are created to record the minimum changes necessary to make\n * the markers. For example, if this is the starting text at a pause point:\n * 1) THIS IS THE FIRST LINE\n * 2) THIS IS SOME CODE\n * 3) HERE IS ANOTHER LINE\n * 4) AND HERE IS SOME MORE\n * 5) LAST LINE\n * \n * And then these changes are made before the next pause point (in lowercase):\n * 1) THIS IS THE FIRST LINE\n * 2) THIS IS SOME cool CODE\n * 3) HERE IS ANOTHER really awesome LINE\n * 4) AND HERE IS SOME MORE\n * 5) LAST LINE\n * \n * This class will record the minimal changes:\n * 1) \n * 2) .............cool\n * 3) ................really awesome\n * \n * There is no need to record lines 4 or 5 or any text on a line after the new\n * code.\n */\nclass NewCodeFileMarker {\n  constructor() {\n    //holds changes made to every line\n    this.lineChanges = [];\n  }\n\n  /*\n   * Marks an insert in a file. The two types of inserts are regular \n   * characters and newlines. \n   */\n  insert(row, col, insertText) {\n    //inserting a newline\n    if (insertText === '\\n') {\n      //the new row after the newline\n      const nextRow = {\n        characters: [],\n        insertsOnLine: false,\n        deletesOnLine: false\n      };\n      //the newline is being added amongst other existing new code\n      if (this.lineChanges[row] && this.lineChanges[row].characters[col]) {\n        //grab all of the new code after the newline and add it to a new row underneath\n        nextRow.characters = this.lineChanges[row].characters.splice(col);\n      } else { //the newline is outside of the existing new code\n        //expand the rows (if necessary)\n        this.expandToRowAndColumn(row, col);\n      }\n      //add the new row\n      this.lineChanges.splice(row + 1, 0, nextRow);\n    } else { //not a new line\n      //expand the rows (if necessary)\n      this.expandToRowAndColumn(row, col);\n\n      //mark the position as new code and an insert on the line\n      this.lineChanges[row].characters.splice(col, 0, insertText);\n\n      //mark the newline on the current row\n      this.lineChanges[row].insertsOnLine = true;\n    }\n  }\n\n  /*\n   * Adds line changes up to a row (only if needed). It also adds placeholders \n   * up to but not including the passed in column value (again, only if needed).\n   */\n  expandToRowAndColumn(row, col) {\n    //if the requested row does not exist yet add rows until it does\n    while (row >= this.lineChanges.length) {\n      //add empty rows until it does \n      this.lineChanges.push({\n        characters: [],\n        insertsOnLine: false,\n        deletesOnLine: false\n      });\n    }\n\n    //if the columns before the new text do not exist yet\n    while (col > this.lineChanges[row].characters.length) {\n      //add a placeholder for code\n      this.lineChanges[row].characters.push('\\0');\n    }\n  }\n\n  /*\n   * Handles deleting from a file. The two types of deletes are characters\n   * and newlines.\n   */\n  delete(row, col, deleteText) {\n    //deleting a newline\n    if (deleteText === '\\n') {\n      //the newline is being deleted amongst other new code\n      if (row < this.lineChanges.length) {\n        //if there is a row of new code underneath\n        if (this.lineChanges[row + 1]) {\n          //if there is some new code on the line underneath\n          if (this.lineChanges[row + 1].characters.length > 0) {\n            //now add the new code on the row underneath to the end of this row\n            for (let i = 0; i < this.lineChanges[row + 1].characters.length; i++) {\n              this.lineChanges[row].characters.push(this.lineChanges[row + 1].characters[i]);\n            }\n          }\n          //remove the copied row\n          this.lineChanges.splice((row + 1), 1);\n        } // else- no new code underneath, this row has already been marked as deleted\n      } else { //the newline is outside of the existing new code rows and can be ignored\n        //expand the rows (if necessary)\n        this.expandToRowAndColumn(row, col);\n      }\n    } else { //not a new line\n      //the text is being deleted amongst other new code\n      if (this.lineChanges[row] && this.lineChanges[row].characters[col]) {\n        //remove the new code (or placeholder)\n        this.lineChanges[row].characters.splice(col, 1);\n      } else {//the newline is outside of the existing new code \n        //expand the rows (if necessary)\n        this.expandToRowAndColumn(row, col);\n      }\n    }\n    //mark a delete on the line\n    this.lineChanges[row].deletesOnLine = true;\n  }\n\n  toDebugString() {\n    let retVal = \"\";\n    for (let row = 0; row < this.lineChanges.length; row++) {\n      retVal += `${(row + 1)}. `;\n      for (let col = 0; col < this.lineChanges[row].characters.length; col++) {\n        if (this.lineChanges[row].characters[col] === '\\0') {\n          retVal += '.'\n        } else if ((this.lineChanges[row].characters[col] !== '\\n')) {\n          retVal += this.lineChanges[row].characters[col];\n        }\n      }\n      retVal += \"\\n\";\n    }\n\n    return retVal;\n  }\n\n  /*\n   * Creates the ranges of changes to a file so that they can be highlighted.\n   */\n  getAllNewCodeMarkers() {\n    const allMarkers = [];\n    let markerStarted = false;\n    let latestMarker = {};\n\n    //go through all of the new code\n    for (let row = 0; row < this.lineChanges.length; row++) {\n      //if there are any changes on this line\n      if (this.lineChanges[row].characters.length > 0) {\n        //go through the placeholders and inserts on the line\n        for (let col = 0; col < this.lineChanges[row].characters.length; col++) {\n          //if this is some new code\n          if (this.lineChanges[row].characters[col] !== '\\0') {\n            //if a marker has been started already\n            if (markerStarted) {\n              latestMarker['endColumn'] = col + 1;\n            } else { //no new marker yet, start a new marker\n              latestMarker['startRow'] = row;\n              latestMarker['startColumn'] = col;\n              latestMarker['endRow'] = row;\n              latestMarker['endColumn'] = col + 1\n\n              markerStarted = true;\n            }\n          } else { //this is placeholder code\n            //if in the middle of creating a marker\n            if (markerStarted) {\n              //the marker is complete, add it to the collection of all markers\n              allMarkers.push(latestMarker);\n              //reset for the next change\n              markerStarted = false;\n              latestMarker = {};\n            }\n          }\n        }\n\n        //after going through a changed line the marker may be unfinished\n        if (markerStarted) {\n          //the marker is complete, add it to the collection of all markers\n          allMarkers.push(latestMarker);\n          //reset for the next change\n          markerStarted = false;\n          latestMarker = {};\n        }\n      }\n    }\n\n    return allMarkers;\n  }\n\n  /*\n   * Gets the line numbers with inserts.\n   */\n  getLinesWithInserts() {\n    const retVal = [];\n    //go through all of the changed lines\n    for (let i = 0; i < this.lineChanges.length; i++) {\n      //if there was an insert on this line\n      if (this.lineChanges[i].insertsOnLine) {\n        //store the line number\n        retVal.push(i);\n      }\n    }\n\n    return retVal;\n  }\n\n  getLinesWithDeletes() {\n    const retVal = [];\n    //go through all of the changed lines\n    for (let i = 0; i < this.lineChanges.length; i++) {\n      //if there was a delete on this line\n      if (this.lineChanges[i].deletesOnLine) {\n        //store the line number\n        retVal.push(i);\n      }\n    }\n\n    return retVal;\n  }\n}\n\nexport default NewCodeFileMarker;","import NewCodeFileMarker from './NewCodeFileMarker';\n\n/*\n * This class is used to record the changes to a group of files during forward \n * pogress of a playback. It creates a new code file marker for only the \n * changed files in a playback. It manages all of the changes from one pause\n * point to another.\n */\nclass NewCodeMarkerGenerator {\n  constructor() {\n    //the new code file markers for only the changed files\n    this.newCodeFileMarkers = {};\n  }\n\n  /*\n   * Handles create/rename/move file.\n   */\n  touchFile(fileEvent) {\n    //if there is not a file marker for this file\n    if (!this.newCodeFileMarkers[fileEvent.fileId]) {\n      //create a new file marker\n      this.newCodeFileMarkers[fileEvent.fileId] = new NewCodeFileMarker();\n    }\n  }\n\n  /*\n   * Handles an insert into a file.\n   */\n  insert(insertEvent) {\n    //if there is not a file marker for this file\n    if (!this.newCodeFileMarkers[insertEvent.fileId]) {\n      //create a new file marker\n      this.newCodeFileMarkers[insertEvent.fileId] = new NewCodeFileMarker();\n    }\n\n    let insertEventCharacter = insertEvent.character;\n    if (insertEvent.character === 'NEWLINE' || insertEvent.character === 'CR-LF') {\n      insertEventCharacter = '\\n';\n    }\n\n    //handle the insert\n    this.newCodeFileMarkers[insertEvent.fileId].insert(insertEvent.lineNumber - 1, insertEvent.column - 1, insertEventCharacter);\n  }\n\n  /*\n   * Handles a delete from a file.\n   */\n  delete(deleteEvent) {\n    //if there is not a file marker for this file\n    if (!this.newCodeFileMarkers[deleteEvent.fileId]) {\n      //create a new file marker\n      this.newCodeFileMarkers[deleteEvent.fileId] = new NewCodeFileMarker();\n    }\n    let deleteEventCharacter = deleteEvent.character;\n    if (deleteEvent.character === 'NEWLINE' || deleteEvent.character === 'CR-LF') {\n      deleteEventCharacter = '\\n';\n    }\n    //handle the delete\n    this.newCodeFileMarkers[deleteEvent.fileId].delete(deleteEvent.lineNumber - 1, deleteEvent.column - 1, deleteEventCharacter);\n  }\n\n  /*\n   * Gets all of the file markers for the changed files.\n   */\n  getAllNewCodeMarkers() {\n    //a collection of all the ranges of changed code for all files that \n    //were updated since the last pause point\n    const allNewCodeMarkers = {};\n    //go through the changed files\n    for (let fileId in this.newCodeFileMarkers) {\n      //ask the file marker to return an array of all code to be highlighted\n      allNewCodeMarkers[fileId] = this.newCodeFileMarkers[fileId].getAllNewCodeMarkers();\n    }\n\n    return allNewCodeMarkers;\n  }\n\n  /*\n   * Gets all of the file markers for a changed file.\n   */\n  getNewCodeMarkers(fileId) {\n    //an array of ranges of changed code for all files that \n    //were updated since the last pause point\n    let newCodeMarkers = [];\n    if(this.newCodeFileMarkers[fileId]) {\n      //ask the file marker to return an array of all code to be highlighted\n      newCodeMarkers = this.newCodeFileMarkers[fileId].getAllNewCodeMarkers();\n    }\n    return newCodeMarkers;\n  }\n\n  /*\n   * Returns an object with all of the line numbers where new code was added.\n   */\n  getAllInsertLineNumbers() {\n    //a collection of all the line numbers with inserts since the last pause point\n    const allInsertLineNumbers = {};\n    //go through the changed files\n    for (let fileId in this.newCodeFileMarkers) {\n      //ask the file marker to return an array of all insert line numbers\n      allInsertLineNumbers[fileId] = this.newCodeFileMarkers[fileId].getLinesWithInserts();\n    }\n\n    return allInsertLineNumbers;\n  }\n  /*\n   * Returns an array with all of the line numbers where new code was added.\n   */\n  getInsertLineNumbers(fileId) {\n    //a collection of all the line numbers with inserts since the last pause point\n    let insertLineNumbers = [];\n    if(this.newCodeFileMarkers[fileId]) {\n      //ask the file marker to return an array of all insert line numbers\n      insertLineNumbers = this.newCodeFileMarkers[fileId].getLinesWithInserts();\n    }\n\n    return insertLineNumbers;\n  }\n  /*\n   * Returns an object with all of the line numbers where new code was deleted.\n   */\n  getAllDeleteLineNumbers() {\n    //a collection of all the line numbers with deletes since the last pause point\n    const allDeleteLineNumbers = {};\n    //go through the changed files\n    for (let fileId in this.newCodeFileMarkers) {\n      //ask the file marker to return an array of all delete line numbers\n      allDeleteLineNumbers[fileId] = this.newCodeFileMarkers[fileId].getLinesWithDeletes();\n    }\n\n    return allDeleteLineNumbers;\n  }\n\n  /*\n   * Returns an array with all of the line numbers where new code was deleted.\n   */\n  getDeleteLineNumbers(fileId) {\n    //a collection of all the line numbers with deletes since the last pause point\n    let deleteLineNumbers = [];\n    if (this.newCodeFileMarkers[fileId]) {\n      //ask the file marker to return an array of all delete line numbers\n      deleteLineNumbers = this.newCodeFileMarkers[fileId].getLinesWithDeletes();\n    }\n\n    return deleteLineNumbers;\n  }\n  /*\n   * Returns all the file ids that were touched.\n   */\n  getAllChangedFileIds() {\n    return Object.keys(this.newCodeFileMarkers);\n  }\n\n  /*\n   * Returns an object with all of the relevant data.\n   */\n  getAllData() {\n    return {\n      allNewCodeMarkers: this.getAllNewCodeMarkers(),\n      allInsertLineNumbers: this.getAllInsertLineNumbers(),\n      allDeleteLineNumbers: this.getAllDeleteLineNumbers(),\n      allChangedFileIds: this.getAllChangedFileIds()\n    };\n  }\n\n  getData(fileId) {\n    return {\n      allNewCodeMarkers: this.getNewCodeMarkers(fileId),\n      allInsertLineNumbers: this.getInsertLineNumbers(fileId),\n      allDeleteLineNumbers: this.getDeleteLineNumbers(fileId),\n      allChangedFileIds: this.getAllChangedFileIds()\n    };\n  }\n\n  /*\n   * Gets all of the file markers for the changed files.\n   */\n  toDebugString() {\n    for (let fileId in this.newCodeFileMarkers) {\n      console.log(`File id: ${fileId}`);\n      console.log(this.newCodeFileMarkers[fileId].toDebugString());\n      console.log(\"\");\n    }\n  }\n}\n\nexport default NewCodeMarkerGenerator;","import EditorState from './EditorState';\nimport NewCodeMarkerGenerator from './NewCodeMarkerGenerator';\n\nclass PlaybackEngine {\n  constructor(allEvents, allComments) {\n    //playback data\n    this.events = allEvents;\n    this.comments = allComments;\n    //the state of all the files in the playback as it progresses\n    this.editorState = new EditorState();\n    //used to mark changes in the files\n    this.newCodeMarkerGenerator = null;\n    //used to move through events\n    this.currentEventIndex = -1;\n    this.activeFileId = null;\n    //info about active comment (if there is one)\n    this.activeComment = {\n      comment: null,\n      position: null\n    };\n    //used for slider bounds (there is always at least on non-relevant event at the beginning of a playback)\n    this.firstRelevantEventIndex = 1;\n    this.numRelevantEvents = this.events.length - 1;\n    //info about comment locations\n    this.commentIdToEventPosition = {}; //commentId->event pos: {\"comment-0\": 0, \"comment-3\": 0, \"comment-1\": 6, \"comment-2\": 12, \"comment-4\": 12}\n    this.commentGroupEventPositions = []; //event positions where these is a comment [0, 6, 12]\n    this.flattenedComments = []; //all comments in playback order [{\"comment-0\", ...}, {\"comment-3\", ...}, {\"comment-1\", ...}, {\"comment-2\", ...}, {\"comment-4\", ...}]\n    this.commentIndexInFlattenedArray = {}; //commentId->pos in flattened array {\"comment-0\": 0, \"comment-3\": 1, \"comment-1\": 2, \"comment-2\": 3, \"comment-4\": 4}\n\n    //build up data about comments and their positions\n    this.recordCommentPositions();\n\n    //count the events at the beginning that shouldn't be played back because\n    //they were part of a project's initial state\n    this.skipIrrelevantEvents();\n  }\n\n  recordCommentPositions() {\n    //holds the positions of events where there is a comment\n    const commentEventPositionSet = new Set();\n    //go through each group of comments\n    Object.keys(this.comments).forEach(eventId => {\n      const groupOfComments = this.comments[eventId];\n      groupOfComments.forEach(comment => {\n        const commentsPositionInEvents = comment.displayCommentEvent.eventSequenceNumber;\n        //add the position of the comment to a set\n        commentEventPositionSet.add(commentsPositionInEvents);\n        //add an entry in the map to find a comment's event position\n        this.commentIdToEventPosition[comment.id] = commentsPositionInEvents;\n      });\n    });\n    //store the positions where there are comments in order\n    this.commentGroupEventPositions.push(...commentEventPositionSet)\n    this.commentGroupEventPositions.sort();\n    for (let i = 0; i < this.commentGroupEventPositions.length; i++) {\n      const commentPosition = this.commentGroupEventPositions[i];\n      const comments = this.comments[this.events[commentPosition].id];\n      for (let j = 0; j < comments.length; j++) {\n        let comment = comments[j];\n        this.flattenedComments.push(comment);\n        this.commentIndexInFlattenedArray[comment.id] = this.flattenedComments.length - 1;\n      };\n    }\n    //store the first comment as the active one\n    this.activeComment.comment = this.flattenedComments[0];\n    this.activeComment.position = 0;\n  }\n\n  skipIrrelevantEvents() {\n    //event 0 (create project directory) is always non-relevant\n    this.firstRelevantEventIndex = 1;\n    this.numRelevantEvents = this.events.length - 1;\n\n    //find the index of the first relevant event and store it\n    for (let i = 1; i < this.events.length; i++) {\n      if (this.events[i].permanentRelevance === \"never relevant\") {\n        //increase until a relevant event is encountered\n        this.firstRelevantEventIndex++;\n        //decrease the number of relevant events and move the current index\n        this.numRelevantEvents--;\n        this.currentEventIndex++;\n      } else {\n        break;\n      }\n    }\n    //step through the non-relevant events to get ready for action\n    this.stepForward(this.firstRelevantEventIndex);\n  }\n\n  stepForward(numberOfSteps, trackNewCodeChanges=true) {\n    //if there is any room to move forward at least one event\n    if (numberOfSteps > 0 && this.currentEventIndex < this.events.length - 1) { \n      //create a new code marker generator if the user requests one\n      this.newCodeMarkerGenerator = trackNewCodeChanges ? new NewCodeMarkerGenerator() : null;\n\n      //step forward the requested number of steps\n      for (let stepNumber = 0; stepNumber < numberOfSteps && this.currentEventIndex < this.events.length - 1; stepNumber++) {\n        //move forward before handling event\n        this.currentEventIndex++;\n\n        //playback the event\n        const currentEvent = this.events[this.currentEventIndex];\n        this.handleEvent(currentEvent);\n\n        //store the file where the latest event occurred (dir events will return null) \n        this.activeFileId = currentEvent.fileId;\n      }\n      //check where the action stopped to see if there is a comment to highlight\n      this.checkForCommentAtCurrentIndex();\n    }\n  }\n\n  stepBackward(numberOfSteps) {\n    //if there is any room to move forward\n    if (numberOfSteps > 0 && this.currentEventIndex >= this.firstRelevantEventIndex) {\n      //never track changes moving backwards\n      this.newCodeMarkerGenerator = null;\n\n      //step backward the requested number of steps\n      for (let stepNumber = 0; stepNumber < numberOfSteps && this.currentEventIndex >= this.firstRelevantEventIndex; stepNumber++) {\n        //playback the event\n        const currentEvent = this.events[this.currentEventIndex];\n        this.handleEventBackward(currentEvent);\n\n        //store the file where the latest event occurred (dir events will return null) \n        this.activeFileId = currentEvent.fileId;\n        \n        //move backward after handling event\n        this.currentEventIndex--;\n      }\n      //check where the action stopped to see if there is a comment to highlight\n      this.checkForCommentAtCurrentIndex();\n    }\n  }\n\n  stepToEventNumber(eventNumber) {\n    //step to the requested event number\n    const eventNumberDiff = eventNumber - this.currentEventIndex;\n    \n    if (eventNumberDiff > 0) {\n      this.stepForward(eventNumberDiff);\n    } else if (eventNumberDiff < 0) {\n      this.stepBackward(-eventNumberDiff);\n    } //else- it is 0 and no change is needed\n  }\n  \n  checkForCommentAtCurrentIndex() {\n    const currentEvent = this.events[this.currentEventIndex];\n    //if there is a comment at the current event index point\n    if (this.comments[currentEvent.id]) {\n      const firstCommentInGroup = this.comments[currentEvent.id][0];\n      //store info about the selected comment\n      this.activeComment.comment = firstCommentInGroup;\n      this.activeComment.position = this.commentIndexInFlattenedArray[firstCommentInGroup.id];\n    } else {\n      this.activeComment.comment = null;\n    }\n  }\n\n  //move by clicking on an event\n  stepToCommentById(commentId) {\n    //step to the requested comment\n    const moveToPosition = this.commentIdToEventPosition[commentId];\n    this.stepToEventNumber(moveToPosition);\n\n    //store info about the selected comment for highlighting\n    this.activeComment.position = this.commentIndexInFlattenedArray[commentId];\n    this.activeComment.comment = this.flattenedComments[this.activeComment.position];\n  }\n\n  stepToNextComment() {\n    //if there is at least one more comment to move to\n    if (this.activeComment.position < this.flattenedComments.length - 1) {\n      const nextComment = this.flattenedComments[this.activeComment.position + 1];\n      this.stepToCommentById(nextComment.id);\n    }\n  }\n\n  stepToBeginning() {\n    //go back to the beginning of the playback\n    this.stepToEventNumber(this.firstRelevantEventIndex);\n  }\n\n  stepToEnd() {\n    //go to the end of the playback\n    this.stepToEventNumber(this.events.length - 1);\n  }\n\n  changeActiveFile(fileId) {\n    this.activeFileId = fileId;\n  }\n\n  getActiveFileContents() {\n    //if there is an active file get its contents\n    let activeFileContents = \"\";\n    if(this.activeFileId) {\n      activeFileContents = this.editorState.getFile(this.activeFileId);\n    }\n    return activeFileContents;\n  }\n\n  getNewCodeMarkers() {\n    //if there is an active file get the new code markers in it\n    let newCodeMarkers = null;\n    if(this.activeFileId && this.newCodeMarkerGenerator) {\n      newCodeMarkers = this.newCodeMarkerGenerator.getData(this.activeFileId);\n    }\n    return newCodeMarkers;\n  }\n\n  getAllFiles() {\n    return this.editorState.allFiles;\n  }\n\n  getAllDirectories() {\n    return this.editorState.allDirectories;\n  }\n\n  handleEvent(currentEvent) {\n    if (currentEvent.type === \"CREATE DIRECTORY\") {\n      this.editorState.createDirectory(currentEvent.directoryId, currentEvent.directoryPath, currentEvent.parentDirectoryId);\n    } else if (currentEvent.type === \"DELETE DIRECTORY\") {\n      this.editorState.deleteDirectory(currentEvent.directoryId);\n    } else if (currentEvent.type === \"RENAME DIRECTORY\") {\n      this.editorState.renameDirectory(currentEvent.directoryId, currentEvent.newDirectoryPath);\n    } else if (currentEvent.type === \"MOVE  DIRECTORY\") {\n      this.editorState.moveDirectory(currentEvent.directoryId, currentEvent.newDirectoryPath, currentEvent.newParentDirectoryId, currentEvent.oldParentDirectoryId);\n    } else if (currentEvent.type === \"CREATE FILE\") {\n      this.newCodeMarkerGenerator.touchFile(currentEvent);\n      this.editorState.createFile(currentEvent.fileId, currentEvent.filePath, currentEvent.parentDirectoryId);\n    } else if (currentEvent.type === \"DELETE FILE\") {\n      this.editorState.deleteFile(currentEvent.fileId, currentEvent.parentDirectoryId);\n      this.newCodeMarkerGenerator.touchFile(currentEvent);\n    } else if (currentEvent.type === \"RENAME FILE\") {\n      this.editorState.renameFile(currentEvent.fileId, currentEvent.newFilePath);\n      this.newCodeMarkerGenerator.touchFile(currentEvent);\n    } else if (currentEvent.type === \"MOVE FILE\") {\n      this.editorState.moveFile(currentEvent.fileId, currentEvent.newFilePath, currentEvent.newParentDirectoryId, currentEvent.oldParentDirectoryId);\n    } else if (currentEvent.type === \"INSERT\") {\n      this.newCodeMarkerGenerator.insert(currentEvent);\n      this.editorState.insert(currentEvent.fileId, currentEvent.character, currentEvent.id, currentEvent.lineNumber - 1, currentEvent.column - 1);\n    } else if (currentEvent.type === \"DELETE\") {\n      this.newCodeMarkerGenerator.delete(currentEvent);\n      this.editorState.delete(currentEvent.fileId, currentEvent.lineNumber - 1, currentEvent.column - 1);\n    } else {\n      throw Error(`Invalid event type: ${currentEvent.type}`);\n    }\n  }\n\n  handleEventBackward(currentEvent) {\n    if (currentEvent.type === \"CREATE DIRECTORY\") {\n      this.editorState.createDirectoryBackward(currentEvent.directoryId, currentEvent.parentDirectoryId);\n    } else if (currentEvent.type === \"DELETE DIRECTORY\") {\n      this.editorState.deleteDirectoryBackward(currentEvent.directoryId, currentEvent.parentDirectoryId);\n    } else if (currentEvent.type === \"RENAME DIRECTORY\") {\n      this.editorState.renameDirectoryBackward(currentEvent.directoryId, currentEvent.oldDirectoryPath);\n    } else if (currentEvent.type === \"MOVE  DIRECTORY\") {\n      this.editorState.moveDirectoryBackward(currentEvent.directoryId, currentEvent.oldDirectoryPath, currentEvent.newParentDirectoryId, currentEvent.oldParentDirectoryId,);\n    } else if (currentEvent.type === \"CREATE FILE\") {\n      this.editorState.createFileBackward(currentEvent.fileId, currentEvent.parentDirectoryId);\n    } else if (currentEvent.type === \"DELETE FILE\") {\n      this.editorState.deleteFileBackward(currentEvent.fileId, currentEvent.parentDirectoryId);\n    } else if (currentEvent.type === \"RENAME FILE\") {\n      this.editorState.renameFileBackward(currentEvent.fileId, currentEvent.oldFilePath);\n    } else if (currentEvent.type === \"MOVE FILE\") {\n      this.editorState.moveFileBackward(currentEvent.fileId, currentEvent.oldFilePath, currentEvent.newParentDirectoryId, currentEvent.oldParentDirectoryId);\n    } else if (currentEvent.type === \"INSERT\") {\n      this.editorState.insertBackward(currentEvent.fileId, currentEvent.lineNumber - 1, currentEvent.column - 1);\n    } else if (currentEvent.type === \"DELETE\") {\n      this.editorState.deleteBackward(currentEvent.fileId, currentEvent.character, currentEvent.id, currentEvent.lineNumber - 1, currentEvent.column - 1);\n    } else {\n      throw Error(`Invalid event type: ${currentEvent.type}`);\n    }\n  }\n}\n\nexport default PlaybackEngine;","import React from 'react';\nimport './App.css';\nimport TitleBar from './TitleBar';\nimport BlogView from './BlogView';\nimport CodeView from './CodeView';\nimport PlaybackEngine from './playbackEngine/PlaybackEngine';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    //store the playback's data\n    this.playbackData = props.playbackData;\n    //create an object to handle playing events back\n    this.playbackEngine = new PlaybackEngine(props.playbackData.events, props.playbackData.comments);\n    //for the playback slider\n    this.firstRelevantEventIndex = this.playbackEngine.firstRelevantEventIndex;\n    this.lastRelevantEventIndex = this.playbackData.events.length - 1;\n    this.commentGroupPositions = this.playbackEngine.commentGroupEventPositions;\n    \n    this.state = {\n      editorViewWidth: 70,\n      isInBlogMode: false,\n      currentEventIndex: 0,\n      activeFileId: null,\n      activeFileContents: \"\",\n      newCodeMarkers: null,\n      allFiles: {},\n      allDirectories: {},\n      activeComment: this.playbackEngine.activeComment.comment,\n      editorProperties: {\n        fontSize: 16,\n      },\n      autoPlayback: {\n        isPaused: true,\n        playTimer: null,\n        playbackSpeedMs: 75,\n      }\n    };\n  }\n\n  //used when the slider moves\n  sliderUpdate = (newPosition) => {\n    this.playbackEngine.stepToEventNumber(newPosition);\n    this.setState({\n      currentEventIndex: this.playbackEngine.currentEventIndex,\n      activeComment: this.playbackEngine.activeComment.comment,\n      activeFileId: this.playbackEngine.activeFileId,\n      activeFileContents: this.playbackEngine.getActiveFileContents(),\n      newCodeMarkers: this.playbackEngine.getNewCodeMarkers(),\n      allFiles: this.playbackEngine.getAllFiles(),\n      allDirectories: this.playbackEngine.getAllDirectories()\n    });\n  }\n\n  //used when a comment is clicked on\n  moveToSelectedComment = (commentId) => {\n    this.playbackEngine.stepToCommentById(commentId);\n    this.setState({\n      currentEventIndex: this.playbackEngine.currentEventIndex,\n      activeComment: this.playbackEngine.activeComment.comment,\n      activeFileId: this.playbackEngine.activeFileId,\n      activeFileContents: this.playbackEngine.getActiveFileContents(),\n      newCodeMarkers: this.playbackEngine.getNewCodeMarkers(),\n      allFiles: this.playbackEngine.getAllFiles(),\n      allDirectories: this.playbackEngine.getAllDirectories()\n    });\n  }\n\n  //used when the user clicks the button to move to the next comment\n  moveToNextComment = () => {\n    this.playbackEngine.stepToNextComment();\n    this.setState({\n      currentEventIndex: this.playbackEngine.currentEventIndex,\n      activeComment: this.playbackEngine.activeComment.comment,\n      activeFileId: this.playbackEngine.activeFileId,\n      activeFileContents: this.playbackEngine.getActiveFileContents(),\n      newCodeMarkers: this.playbackEngine.getNewCodeMarkers(),\n      allFiles: this.playbackEngine.getAllFiles(),\n      allDirectories: this.playbackEngine.getAllDirectories()\n    });\n  }\n\n  //used to toggle play/pause after clicking the play button\n  togglePlayPause = (newIsPaused) => {\n    this.setState(oldState => {\n      if (newIsPaused === true) {\n        //cancel timer\n        clearInterval(oldState.autoPlayback.playTimer);\n        oldState.autoPlayback.playTimer = null;\n      } else {\n        //start timer\n        if (oldState.autoPlayback.playTimer === null) {\n          oldState.autoPlayback.playTimer = setInterval(this.playNextEvent, this.state.autoPlayback.playbackSpeedMs);\n        }\n      }\n      oldState.autoPlayback.isPaused = newIsPaused;\n      return oldState;\n    });\n  }\n  //used to animate the events in a playback when the play button is pressed\n  playNextEvent = () => {\n    //play one event forward\n    this.playbackEngine.stepForward(1);\n    \n    //if there is a comment or there are no more events then pause\n    if (this.playbackEngine.activeComment.comment !== null || this.playbackEngine.currentEventIndex === this.playbackData.events.length - 1) {\n      this.togglePlayPause(true);\n    }\n    \n    this.setState({\n      currentEventIndex: this.playbackEngine.currentEventIndex,\n      activeComment: this.playbackEngine.activeComment.comment,\n      activeFileId: this.playbackEngine.activeFileId,\n      activeFileContents: this.playbackEngine.getActiveFileContents(),\n      newCodeMarkers: this.playbackEngine.getNewCodeMarkers(),\n      allFiles: this.playbackEngine.getAllFiles(),\n      allDirectories: this.playbackEngine.getAllDirectories()\n    });\n  }\n\n  changeActiveFile = (fileId) => {\n    this.playbackEngine.changeActiveFile(fileId);\n    this.setState({\n      activeFileId: this.playbackEngine.activeFileId,\n      activeFileContents: this.playbackEngine.getActiveFileContents(),\n      newCodeMarkers: this.playbackEngine.getNewCodeMarkers()\n    });\n  }\n  enterCodeMode = () => {\n    this.setState({ isInBlogMode: false });\n  }\n\n  enterBlogMode = () => {\n    this.setState({ isInBlogMode: true });\n  }\n\n  updateEditorViewWidth = (newWidth) => {\n    this.setState({ editorViewWidth: newWidth.right });\n  }\n\n  render() {\n    //TODO make all of the dev avatars and pass a map of them in to both components. Make the all dev avatars too.\n\n    let selectedView;\n    if (this.state.isInBlogMode) {\n      selectedView = \n        <BlogView \n          fontSize={this.state.editorProperties.fontSize}\n          comments={this.playbackData.comments}\n          title={this.playbackData.playbackTitle}\n          developers={this.playbackData.developers}\n          developerGroups={this.playbackData.developerGroups}\n        />\n    }\n    else {\n      selectedView =\n        <CodeView\n          //CodeView control\n          editorViewWidth={this.state.editorViewWidth}\n          updateEditorViewWidth={this.updateEditorViewWidth}\n          fontSize={this.state.editorProperties.fontSize}\n          //editor data\n          activeFileId={this.state.activeFileId}\n          activeFileContents={this.state.activeFileContents}\n          changeActiveFile={this.changeActiveFile}\n          newCodeMarkers={this.state.newCodeMarkers}\n          allFiles={this.state.allFiles}\n          allDirectories={this.state.allDirectories}\n          //comment data\n          comments={this.playbackData.comments}\n          playbackTitle={this.playbackData.playbackTitle}\n          activeComment={this.state.activeComment}\n          firstRelevantEventIndex={this.firstRelevantEventIndex}\n          lastRelevantEventIndex={this.lastRelevantEventIndex}\n          commentGroupPositions={this.commentGroupPositions}\n          developers={this.props.playbackData.developers}\n          developerGroups={this.props.playbackData.developerGroups}\n          //comment methods\n          moveToNextComment={this.moveToNextComment}\n          moveToSelectedComment={this.moveToSelectedComment}\n          togglePlayPause={this.togglePlayPause}\n          //playback slider data\n          currentEventIndex={this.state.currentEventIndex}\n          isPaused={this.state.autoPlayback.isPaused}\n          sliderUpdate={this.sliderUpdate}\n        />\n    }\n\n    return (\n      <div className=\"playbackBox\">\n        <TitleBar\n          playbackTitle={this.playbackData.playbackTitle}\n          enterCodeMode={this.enterCodeMode}\n          enterBlogMode={this.enterBlogMode}\n          isInBlogMode={this.state.isInBlogMode}\n        />\n        <div className=\"playbackContent\">\n          {selectedView}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconsole.log(\"Inside script\");\nconst playbackData = {};\nwindow.loadPlaybackData();\nconsole.log(\"Inside script\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App playbackData={playbackData} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}